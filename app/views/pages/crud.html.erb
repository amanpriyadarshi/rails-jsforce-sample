<% provide(:title, 'CRUD') %>

<div class="query-page">
  <!-- main -->
  <div id="sb-site" class="main-color">
    <%= render 'menu_header' %>

    <div class="container">
      <div style="margin-bottom: 20px;">
        <fieldset>
          <h1 class="header-line">CRUD</h1>
          <div class="form-group">
            <label>Account Name</label>
            <input type="text" class="form-control" data-bind="value:input_account_name"></input>
          </div>
        </fieldset>        
        <button type="button" class="btn btn-primary" data-bind="click: clickCreateBtn">Create</button>
        <button type="button" class="btn btn-primary" data-bind="click: clickSearchBtn">Search</button>
      </div>

      <table class="table table-hover">
        <thead>
          <tr>
            <th></th>
            <th>Name</th>
            <th>Account Number</th>
          </tr>
        </thead>
        <tbody data-bind="foreach: listItems">
          <tr>
            <td>
              <button type="button" class="btn btn-primary" data-bind="click: $parent.clickDeleteBtn, clickBubble: false">Delete</button>
            </td>
            <td>
              <div data-bind="text: account_name"></div>
            </td>
            <td>
              <div data-bind="text: account_number"></div>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
  <!-- sidebar -->
  <%= render 'sidebar' %>
</div>

<% content_for :scripts do %>
<script type="text/javascript">

  var conn = null;

  $(document).ready(function(){
    // Slidebar
    $.slidebars();

    jsforce.browser.on('connect', function(c) {
      conn = c;
    });
  });

  // View Model
  function viewModel() {
    var self = this;
    self.input_account_name = '';
    self.listItems = ko.observableArray([]);

    // CreateBtn
    self.clickCreateBtn = function() {

      // Multiple records creation
      conn.sobject('Account').create([
        { Name : self.input_account_name }
      ],
      function(err, rets) {
        if (err) {
          swal('ERROR!', err, 'error');
          return false;
        }
        for (var i=0; i < rets.length; i++) {
          if (rets[i].success) {
            swal('Create!', 'Created record id : ' + rets[i].id, 'success');
            return false;
          }
        }
      });
    };
  
    // SearchBtn
    self.clickSearchBtn = function() {
      self.listItems.removeAll();
      var query = 'SELECT Id,Name,AccountNumber FROM Account';
      query += ' ORDER BY Name ASC';
      query += ' LIMIT 200';

      conn.query(query, function(err, res) {
        if (err) {
          swal('ERROR!', err, 'error');
          return false;
        }

        for (var i = 0; i < res.records.length; i++) {
          self.listItems.push({
             account_id: res.records[i].Id
            ,account_name: res.records[i].Name
            ,account_number: res.records[i].AccountNumber
          });  
        }

        ko.applyBindings(viewModel);
      });

      // DeleteBtn
      self.clickDeleteBtn = function(record) {
        console.log(record);
        // Single record deletion
        conn.sobject("Account").destroy(record.account_id, function(err, ret) {
          if (err || !ret.success) {
            swal('ERROR!', err, 'error');
            return false;
          }
          console.log('Deleted Successfully : ' + ret.id);
        });
        swal('Delete!');
      }
    };

  };

  // Model
  ko.applyBindings(new viewModel());
</script>
<% end %>